name: Rust Build (Cross-Compile)

on:
  release:
    types: [published]

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.release.id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-pc-windows-gnu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust and targets
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env
          rustup target add ${{ matrix.target }}

      - name: Install additional tools (if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
        if: matrix.target == 'x86_64-pc-windows-gnu'

      - name: Build the project in release mode
        run: |
          source $HOME/.cargo/env
          cargo build --release --target ${{ matrix.target }}

      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/stl2lnas${{ matrix.target == 'x86_64-pc-windows-gnu' && '.exe' || '' }}
          asset_name: stl2lnas-${{ matrix.target }}${{ matrix.target == 'x86_64-pc-windows-gnu' && '.exe' || '' }}
          asset_content_type: application/octet-stream
